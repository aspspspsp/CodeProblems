package LeetCode.Medium;
/*��̖	2�M�Ɣ�		1�Ă���	���
 * -----------------------------------
 *0		0			0		��0���Y��
 *1		1			1		��0���Y��+1
 * -----------------------------------
 *2		10			1 		��0���Y��+1
 *3		11			2 		��1���Y��+1
 * -----------------------------------
 *4		100			1		��0���Y��+1
 *5 	101			2 		��1���Y��+1
 *6 	110			2		��2���Y��+1
 *7	 	111			3		��3���Y��+1
 * -----------------------------------
 *8 	1000		1		��0���Y��+1	
 *9 	1001		2		��1���Y��+1
 *10 	1010		2		��2���Y��+1
 *11 	1011		3		��3���Y��+1
 *12	1100		2		��4���Y��+1
 *13	1101		3		��5���Y��+1
 *14 	1110		3		��6���Y��+1
 *15 	1111		4		��7���Y��+1
*/
public class CountingBits {
	public int[] countBits(int num) {
		int[] result = new int[num + 1];
		
		int powOf2 = 1; //�z�y��(�Ƿ�ɱ�2�����Ĕ�)һ�_ʼ��2��0�η�
		int before = 1; //��׃�����Á��ȡǰ��Y��(1�Ă���)
		for(int i = 1; i <= num; i ++) {
			if(i == powOf2) { //���˔���2�Ĵη�
				result[i] = 1; //���˔��ɱ�2�����r��ֻ��һ��1
				powOf2 <<= 1; //���z�y������һλ(��2��Ч��)
				
				before = 1; //���ã���ʾ1�Ă���������ǰ��ĽY������
			} else { //��t
				result[i] = result[before] + 1; //1�Ă����Ǹ���ǰ��1�Ă��� + 1
				before = before + 1; //����׃����ǰŲ
			}
		}
	    return result;
	}
}
